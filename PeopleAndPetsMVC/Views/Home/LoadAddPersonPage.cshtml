@model PeopleAndPetsAPI.Entities.PersonViewModel

@{
    ViewData["Title"] = "LoadAddPersonPage";

    bool successfullyAddedMessage = false;
    if (ViewData["AddedSuccessfully"] != null)
    {
        successfullyAddedMessage = true;
    }
}

<h1>Add a pet owner</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm("AddPerson", "Home", FormMethod.Post))
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            <br />
            <div class="form-group">
                @Html.DropDownListFor(model => model.Gender, new SelectList(new[] { "Male", "Female" }), "Select Gender", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        }

        @if (successfullyAddedMessage)
        {
            <p>@ViewData["AddedSuccessfully"].ToString()</p>
        }
    </div>
</div>

<div>
    @Html.ActionLink("Back to home", "Index", "Home")
</div>
